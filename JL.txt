1S.
import java.io.*; 
import java.util.*; 
class ebill
{
public static void main (String args[])
{
customerdata ob = new customerdata();
ob.getdata();
ob.calc();
ob.display();
}
}
class customerdata
{
Scanner in = new Scanner(System.in);
Scanner ins = new Scanner(System.in);
String cname,type;
int bn;
double current,previous,tbill,units;
void getdata()
{
System.out.print ("\n\t Enter consumer number  ");
bn = in.nextInt();
System.out.print ("\n\t Enter Type of connection  (D for Domestic or C for Commercial) ");
type = ins.nextLine();
System.out.print ("\n\t Enter consumer name  ");
cname = ins.nextLine();
System.out.print ("\n\t Enter previous month reading  ");
previous= in.nextDouble();
System.out.print ("\n\t Enter current month reading  ");
current= in.nextDouble();
}
void calc()
{
units=current-previous;
if(type.equals("D"))
{
if (units<=100)
tbill=1 * units;
else if (units>100 && units<=200)
tbill=2.50*units;
else if(units>200 && units<=500)
tbill= 4*units;
else
tbill= 6*units;
}
else 
{
if (units<=100)
tbill= 2 * units;
else if(units>100 && units<=200)
tbill=4.50*units;
else if(units>200 && units<=500)
tbill= 6*units;
else
tbill= 7*units;
}
}
void display()
{
System.out.println("\n\t Consumer number = "+bn);
System.out.println ("\n\t Consumer name = "+cname);
if(type.equals("D"))
System.out.println ("\n\t type of connection  = DOMESTIC ");
else
System.out.println ("\n\t type of connection  = COMMERCIAL ");
System.out.println ("\n\t Current Month  Reading = "+current);
System.out.println ("\n\t Previous Month  Reading = "+previous);
System.out.println ("\n\t Total units = "+units);
System.out.println ("\n\t Total bill = RS "+tbill);
}
}


2S.
//For Packages, Folder Name should be CurrencyConverter 
//File Name should be CurrencyConverter.java 

package CurrencyConverter; 
public class CurrencyConverter 
{ 
public double dollortoinr(double x) 
{ 
double inr=x*67.86; 
return inr; 
} 
public double inrtodollor(double x) 
{ 
double dollor=x/67.86; 
return dollor; 
} 
public double eurotoinr(double x) 
{ 
double inr=x*79.18; 
return inr; 
} 
public double inrtoeuro(double x) 
{ 
double euro=x/79.18; 
return euro; 
} 
public double yentoinr(double x) 
{ 
double inr=x*0.62; 
return inr; 
} 
public double inrtoyen(double x) 
{ 
double yen=x/0.62; 
return yen; 
} 
} 
//For Packages, Folder Name should be DistanceConverter 
//File Name should be DistanceConverter.java 
package DistanceConverter; 
public class DistanceConverter 
{ 
public double metertokm(double x) 
{ 
double km=x*0.001; 
return km; 
} 
public double kmtometer(double x) 
{ 
double meter=x/0.001; 
return meter; 
} 
public double milestokm(double x) 
{ 
double km=x*1.60934; 
return km; 
} 
public double kmtomiles(double x) 
{ 
double miles=x/1.60394; 
return miles; 
} 
} 
//For Packages, Folder Name should be TimeConverter 
//File Name should be TimeConverter.java 
package TimeConverter; 
public class TimeConverter 
{ 
public double hourstominutes(double x) 
{ 
double minutes=x*60; 
return minutes; 
} 
public double minutestohours(double x) 
{ 
double hours=x/60; 
return hours; 
} 
public double hourstoseconds(double x) 
{ 
double seconds=x*3600; 
return seconds; 
} 
public double secondstohours(double x) 
{ 
double hours=x/3600; 
return hours; 
} 
} 
//File Name should be Converter.java separate this file from above 3 folders 
import CurrencyConverter.*; 
import DistanceConverter.*; 
import TimeConverter.*; 
import java.io.*; 
import java.util.*; 
class Converter 
{ 
public static void main(String args[]) 
{ 
System.out.println("1.CurrencyConverter"); 
System.out.println("2.DistanceConverter"); 
System.out.println("3.TimeConverter"); 
Converter cr = new Converter(); 
Scanner c = new Scanner(System.in); 
int choice = c.nextInt(); 
String op = null; 
switch(choice) 
{ 
case 1: cr.Currency(); break; 
case 2: cr.Distance(); break; 
case 3: cr.Time(); break; 
default: 
System.out.println("Invalid case"); 
return; 
} 
} 
public void Currency() 
{ 
Scanner in = new Scanner(System.in); 
System.out.println("Welcome to Currency Converter"); 
System.out.println("Enter the amount :"); 
double amt = in.nextInt(); 
CurrencyConverter cc = new CurrencyConverter(); 
System.out.println("DOLLOR="+amt+" is INR="+cc.dollortoinr(amt)); 
System.out.println("INR="+amt+" is DOLLOR="+cc.inrtodollor(amt)); 
System.out.println("EURO="+amt+" is INR="+cc.eurotoinr(amt)); 
System.out.println("INR="+amt+" is EURO="+cc.inrtoeuro(amt)); 
System.out.println("YEN="+amt+" is INR="+cc.yentoinr(amt)); 
System.out.println("INR="+amt+" is YEN="+cc.inrtoyen(amt)); 
} 
public void Distance() 
{ 
Scanner in = new Scanner(System.in); 
System.out.println("Welcome to Distance Converter"); 
System.out.println("Enter the distance :"); 
double dis = in.nextInt(); 
DistanceConverter dd = new DistanceConverter(); 
 
System.out.println("METER="+dis+" is KM="+dd.metertokm(dis)); 
System.out.println("KM="+dis+" is METER="+dd.kmtometer(dis)); 
System.out.println("MILES="+dis+" is KM="+dd.milestokm(dis)); 
System.out.println("KM="+dis+" is MILES="+dd.kmtomiles(dis)); 
} 
 
public void Time() 
{ 
Scanner out = new Scanner(System.in); 
System.out.println("Welcome to Time Converter"); 
System.out.println("Enter the time :"); 
double tim = out.nextInt(); 
TimeConverter tt = new TimeConverter(); 
System.out.println("HOURS="+tim+" is MINUTES="+tt. hourstominutes(tim)); 
System.out.println("MINUTES="+tim+" is HOURS="+tt.minutestohours(tim)); 
System.out.println("HOURS="+tim+" is SECONDS="+tt.hourstoseconds(tim)); 
System.out.println("SECONDS="+tim+" is HOURS="+tt.secondstohours(tim)); 
} 
} 

3S.

package employee; 
public class Employee 
{ 
private String name; 
private String id; 
private String address; 
private String mailId; 
private String mobileNo; 
public Employee(String name, String id, String address, String mailId, String mobileNo) 
{ 
this.name= name; 
this.id= id; 
this.address= address; 
this.mailId= mailId; 
this.mobileNo= mobileNo; 
} 
 
public void display() 
{ 
System.out.println("Emp_Name : "+ name + "\t" + "Emp_id : "+ id); 
System.out.println("Address : " + address); 
System.out.println("Mail_id : "+ mailId + "\t" + "Mobile_no : " + mobileNo); 
} 
public void paySlip() 
{ 
} 
} 
 
//For Packages, Folder Name should be employee 
//File Name should be Programmer.java 
package employee; 
public class Programmer extends Employee 
{ 
private float bPay; 
private String des; 
public Programmer(String name, String id, String address, String mailId, String mobileNo, float bPay, String des) 
{ 
super(name, id, address, mailId, mobileNo); 
this.bPay= bPay; 
this.des= des; 
} 
public void paySlip() 
{ 
float da=bPay*97/100; 
float hra=bPay*10/100; 
double grossSalary=bPay + da + hra; 
float pf=bPay*12/100; 
double scf=bPay*0.1/100; 
double netSalary=grossSalary - pf - scf; 
System.out.println("------------ Employees Pay Slips ------------"); 
super.display(); 
System.out.println("Designation: "+des); 
System.out.println("Basic_Pay: "+bPay); 
System.out.println("Gross Salary : "+ grossSalary + "\t" + "Net Salary : " + netSalary); 
System.out.println("------------ End of the Statements -----------"); 
} 
} 
//For Packages, Folder Name should be employee 
// File Name should be AssistantProfessor.java 
package employee; 
public class AssistantProfessor extends Employee 
{ 
private float bPay; 
private String des; 
public AssistantProfessor(String name, String id, String address, String mailId, String mobileNo, float bPay, String des) 
{ 
super(name, id, address, mailId, mobileNo); 
this.bPay= bPay; 
this.des= des; 
} 
public void paySlip() 
{ 
float da=bPay*97/100; 
float hra=bPay*10/100; 
double grossSalary=bPay + da + hra; 
float pf=bPay*12/100; 
double scf=bPay*0.1/100; 
double netSalary=grossSalary - pf - scf; 
System.out.println("------------ Employees Pay Slips ------------"); 
super.display(); 
System.out.println("Designation: "+des); 
System.out.println("Basic_Pay: "+bPay); 
System.out.println("Gross Salary : "+ grossSalary + "\t" + "Net Salary : " + netSalary); 
System.out.println("------------ End of the Statements -----------"); 
} 
} 
//For Packages, Folder Name should be employee 
//File Name should be AssociateProfessor.java 
package employee; 
public class AssociateProfessor extends Employee 
{ 
private float bPay; 
private String des; 
public AssociateProfessor(String name, String id, String address, String mailId, String mobileNo, float bPay, String des) 
{ 
super(name, id, address, mailId, mobileNo); 
this.bPay= bPay; 
this.des= des; 
} 
public void paySlip() 
{ 
float da=bPay*97/100; 
float hra=bPay*10/100; 
double grossSalary=bPay + da + hra; 
float pf=bPay*12/100; 
double scf=bPay*0.1/100; 
double netSalary=grossSalary - pf - scf; 
System.out.println("------------ Employees Pay Slips ------------"); 
super.display(); 
System.out.println("Designation: "+des); 
System.out.println("Basic_Pay: "+bPay); 
System.out.println("Gross Salary : "+ grossSalary + "\t" + "Net Salary : " + netSalary); 
System.out.println("------------ End of the Statements -----------"); 
} 
} 
//For Packages, Folder Name should be employee 
//File Name should be Professor.java 
package employee; 
public class Professor extends Employee 
{ 
private float bPay; 
private String des; 
public Professor(String name, String id, String address, String mailId, String mobileNo, float bPay, String des) 
{ 
super(name, id, address, mailId, mobileNo); 
this.bPay= bPay; 
this.des= des; 
} 
public void paySlip() 
{ 
float da=bPay*97/100; 
float hra=bPay*10/100; 
double grossSalary=bPay + da + hra; 
float pf=bPay*12/100; 
double scf=bPay*0.1/100; 
double netSalary=grossSalary - pf - scf; 
System.out.println("------------ Employees Pay Slips ------------"); 
super.display(); 
System.out.println("Designation: "+des); 
System.out.println("Basic_Pay: "+bPay); 
System.out.println("Gross Salary : "+ grossSalary + "\t" + "Net Salary : " + netSalary); 
System.out.println("------------ End of the Statements -----------"); 
} 
} 
//File Name should be Emp.java separate this file from above folder 
import employee.*; 
import java.io.IOException; 
import java.util.ArrayList; 
import java.util.Scanner; 
public class Emp 
{ 
Employee e; 
ArrayList<Employee> obj= new ArrayList<>(); 
Scanner get= new Scanner(System.in); 
public void addEmployee() 
{ 
System.out.println("Enter the Emp_Name:"); 
String name = get.next(); 
System.out.println("Enter the Emp_id:"); 
String id = get.next(); 
System.out.println("Enter the Address:"); 
String address = get.next(); 
System.out.println("Enter the Mail_id:"); 
String mailId = get.next(); 
System.out.println("Enter the Mobile_no:"); 
String mobileNo = get.next(); 
System.out.println("Enter the Designation:"); 
String des = get.next(); 
System.out.println("Enter the Basic_Pay:"); 
float bPay = get.nextFloat(); 
if(des.equalsIgnoreCase("Programmer")) 
{ 
e= new Programmer(name, id, address, mailId, mobileNo, bPay, des); 
obj.add(e); 
} 
else if(des.equalsIgnoreCase("AssistantProfessor")) 
{ 
e= new AssistantProfessor(name, id, address, mailId, mobileNo, bPay, des); 
obj.add(e); 
} 
else if(des.equalsIgnoreCase("AssociateProfessor")) 
{ 
e= new AssociateProfessor(name, id, address, mailId, mobileNo, bPay, des); 
obj.add(e); 
} 
else if(des.equalsIgnoreCase("Professor")) 
{ 
e= new Professor(name, id, address, mailId, mobileNo, bPay, des); 
obj.add(e); 
} 
} 
public void displayEmployee() 
{ 
for(Employee e:obj) 
{ 
e.paySlip(); 
} 
} 
public static void main(String args[]) throws IOException 
{ 
Emp x= new Emp(); 
String check; 
do 
{ 
x.addEmployee(); 
System.out.println("Do you wnat continue press 'y'"); 
check=x.get.next(); 
} 
while(check.equalsIgnoreCase("y")); 
x.displayEmployee(); 
} 
}
NOTE: 
To Compile, go to employee folder 
javac Employee.java 
javac Programmer.java 
javac AssistantProfessor.java 
javac AssociateProfessor.java 
javac Professor.java 
To Compile, it should be outside the package 
javac Emp.java 
To Run 
java Emp

4S.

//File Name should be StackAdt.java 
import java.util.Scanner; 
interface MyStack 
{ 
public void pop(); 
public void push(); 
public void display(); 
} 
class StackArray implements MyStack 
{ 
final static int n=5; 
int stack[]=new int[n]; 
int top=-1; 
public void push() 
{ 
Scanner in; 
try 
{ 
in=new Scanner(System.in); 
if(top==(n-1)) 
{ 
System.out.println(" Stack Overflow"); 
return; 
} 
else 
{ 
System.out.println("Enter the element"); 
int ele=in.nextInt(); 
stack[++top]=ele; 
} 
} 
catch(Exception e) 
{ 
System.out.println("e"); 
} 
} 
public void pop() 
{ 
if(top<0) 
{ 
System.out.println("Stack underflow"); 
return; 
} 
else 
{ 
int popper=stack[top]; 
top--; 
System.out.println("Popped element:" +popper); 
} 
} 
public void display() 
{ 
if(top<0) 
{ 
System.out.println("Stack is empty"); 
return; 
} 
else 
{ 
String str=" "; 
for(int i=0; i<=top; i++) 
str=str+" "+stack[i]+" -->"; 
System.out.println("Elements are:"+str); 
} 
} 
} 
class StackAdt 
{ 
public static void main(String arg[]) 
{ 
Scanner in= new Scanner(System.in); 
System.out.println("Implementation of Stack using Array"); 
StackArray stk=new StackArray(); 
int ch=0; 
do 
{ 
System.out.println("1.Push 2.Pop 3.Display 4.Exit"); 
System.out.println("Enter your choice:"); 
ch=in.nextInt(); 
switch(ch) 
{ 
case 1: 
stk.push(); 
break; 
case 2: 
stk.pop(); 
break; 
case 3: 
stk.display(); 
break; 
case 4: 
System.exit(0); 
} 
} 
while(ch<4); 
} 
}

5S.

//File Name should be ArrayList.java 
import java.util.*; 
public class ArrayList 
{ 
public static void main(String args[]) 
{ 
ArrayList<String> obj = new ArrayList<String>(); 
/* Append - add at end */ 
obj.add("Arun"); 
obj.add("Balaji"); 
obj.add("Chandru"); 
obj.add("David"); 
obj.add("Elango"); 
System.out.println("\n"+"Elements in ArrayList:"); 
System.out.print("\t"+obj+" "+"\n" + "\n"); 
/* Insert - add at particular index */ 
obj.add(0, "Arujun"); 
obj.add(1, "Barath"); 
System.out.println("After Inserting Elements:"+""); 
System.out.print("\t"+obj+" "+"\n" + "\n"); 
/* Searching Elements in ArrayList */ 
System.out.println("Search For Element:"); 
Scanner in = new Scanner(System.in); 
String searchStr=in.nextLine(); 
boolean ans = obj.contains(searchStr); 
if (ans) 
System.out.println("\t"+"ArrayList contains" +searchStr+ "\n"); 
else 
System.out.println("ArrayList does not contains "+searchStr); 
/* List all string starts with given letter in ArrayList */ 
System.out.println("Arraylist get the strings starting with given letter:"); 
ArrayList<String> obj1 = new ArrayList<String>(); 
String start= in.next(); 
for(int i=0;i<obj.size();i++) 
{ 
if(obj.get(i).startsWith(start.toUpperCase())) 
{ 
obj1.add(obj.get(i)); 
} 
} 
System.out.print("\t"+obj1+" "+"\n" + "\n"); 
} 
}

6S.

import java.util.*;
abstract class shape
{
int x,y;
abstract void area(double x,double y);
}
class Rectangle extends shape
{
void area(double x,double y)
{
System.out.println("Area of rectangle is :"+(x*y));
}
}
class Circle extends shape
{
void area(double x,double y)
{
System.out.println("Area of circle is :"+(3.14*x*x));
}
}
class Triangle extends shape
{
void area(double x,double y)
{
System.out.println("Area of triangle is :"+(0.5*x*y));
}
}
public class AbstactDDemo
{
public static void main(String[] args)
{
Rectangle r=new Rectangle();
r.area(2,5);
Circle c=new Circle();
c.area(5,5);
Triangle t=new Triangle();
t.area(2,5);
}
}

7S.

import java.io.*; import java.util.*;

class MyException extends Exception
{
private int d; MyException(int a)
{
d = a;
}

public String toString()
{
return "MyException [" + d + "]";
}
}

class UserException
{
static void compute(int a) throws MyException
{
System.out.println ("Called Compute(" + a + ")"); 
if(a>10)
throw new MyException(a); 
System.out.println ("Normal Exit");
}
 
public static void main(String args[])
{
try
{
compute(1); compute(20);
}
catch(MyException e)
{
System.out.println("Caught " + e);
}
}
}

8S.
import java.io.*; import java. util.*; public class FileInfo
{
public static void main(String[] args) throws IOException
{
Scanner in=new Scanner(System.in);

System.out.print("\nEnter the FileName: "); String fName = in.next();
 
File f = new File(fName);
String result = f.exists() ? " exists." : " does not exist."; System.out.println("\nThe given file " +fName + result);
System.out.println("\nFile Location: "+f.getAbsolutePath()); if(f.exists())
{
result = f.canRead() ? "readable." : "not readable."; System.out.println("\nThe file is " + result);
result = f.canWrite() ? "writable." : "not writable."; System.out.println("\nThe file is " + result);
System.out.println("\nFile length is " + f.length() + " in bytes.");

if (fName.endsWith(".jpg") || fName.endsWith(".gif") || fName.endsWith(".png"))
{
System.out.println("\nThe given file is an image file.");
}
else if (fName.endsWith(".pdf"))
{
System.out.println("\nThe given file is an portable document format.");
}
else if (fName.endsWith(".txt"))
{
System.out.println("\nThe given file is a text file.");
}
else
{
System.out.println("The file type is unknown.");
}
}
}
}

9S.

import java.util.*;

class Even implements Runnable
{
public int x; public Even(int x)
{
this.x = x;
}
public void run()
{
System.out.println("New Thread "+ x +" is EVEN and Square of " + x + " is: " + x * x);
}
}
class Odd implements Runnable
{
public int x; public Odd(int x)
 
{
this.x = x;
}
public void run()
{
System.out.println("New Thread "+ x +" is ODD and Cube of " + x + " is: " + x * x * x);
}
}

class Generate extends Thread
{
public void run()
{
int num = 0;
Random r = new Random(); try
{
for (int i = 0; i < 5; i++)
{
num = r.nextInt(100);
System.out.println("Main Thread Generates Random Integer: " + num); if (num % 2 == 0)
{
Thread t1 = new Thread(new Even(num)); t1.start();
}
else
{
Thread t2 = new Thread(new Odd(num)); t2.start();
}
Thread.sleep(1000);
System.out.println("	");
}
}
catch (Exception ex)
{
System.out.println(ex.getMessage());
}
}
}
public class Multithread
{
public static void main(String[] args)
{
Generate g = new Generate(); g.start();
}
}

10S.

import java.util.*; class MyGeneric {
public static <T extends Comparable<T>> T max(T... elements)
{
T max = elements[0];
for (T element : elements) {
if (element.compareTo(max) > 0)
{
max = element;
}
}
return max;
}

public static void main(String[] args)
{
System.out.println("Integer Max: " + max(Integer.valueOf(32), Integer.valueOf(89))); System.out.println("String Max: " + max("GaneshBabu", "Ganesh")); System.out.println("Double Max: " + max(Double.valueOf(5.6), Double.valueOf(2.9)));
 
System.out.println("Boolean Max: " + max(Boolean.TRUE, Boolean.FALSE)); System.out.println("Byte Max: " + max(Byte.MIN_VALUE, Byte.MAX_VALUE));
}
}

11S.
import java.util.*;
import javax.swing.*;
import java.awt.*;

public class Main{

    static double temp1 = 0, temp2 = 0;
    static String op = "+";

    public static void main(String[] args){

        //DECLARATIONS

        //main window
        JFrame window = new JFrame();

        //panels
        JPanel input = new JPanel();
        JPanel keypad = new JPanel();

        //input box
        JTextField expression = new JTextField(40);


        //buttons
        JButton b1 = new JButton("1");
        JButton b2 = new JButton("2");
        JButton b3 = new JButton("3");
        JButton b4 = new JButton("4");
        JButton b5 = new JButton("5");
        JButton b6 = new JButton("6");
        JButton b7 = new JButton("7");
        JButton b8 = new JButton("8");
        JButton b9 = new JButton("9");
        JButton b0 = new JButton("0");
        JButton bdot = new JButton(".");

        JButton ba = new JButton("+");
        JButton bs = new JButton("-");
        JButton bm = new JButton("*");
        JButton bd = new JButton("/");
        JButton be = new JButton("=");

        JButton bsin = new JButton("SIN");
        JButton bcos = new JButton("COS");
        JButton btan = new JButton("TAN");

        JButton bclear = new JButton("Clear");
        JButton bdel = new JButton("Delete");

        //layouts
        keypad.setLayout(new GridLayout(6,4));
        window.setLayout(new BorderLayout());

        //adding functionality to buttons
        b1.addActionListener(e -> numPress(expression,"1"));
        b2.addActionListener(e -> numPress(expression,"2"));
        b3.addActionListener(e -> numPress(expression,"3"));
        b4.addActionListener(e -> numPress(expression,"4"));
        b5.addActionListener(e -> numPress(expression,"5"));
        b6.addActionListener(e -> numPress(expression,"6"));
        b7.addActionListener(e -> numPress(expression,"7"));
        b8.addActionListener(e -> numPress(expression,"8"));
        b9.addActionListener(e -> numPress(expression,"9"));
        b0.addActionListener(e -> numPress(expression,"0"));
        bdot.addActionListener(e -> numPress(expression,"."));

        ba.addActionListener(e -> operatorPress(expression,"+"));
        bs.addActionListener(e -> operatorPress(expression,"-"));
        bm.addActionListener(e -> operatorPress(expression,"*"));
        bd.addActionListener(e -> operatorPress(expression,"/"));
        bsin.addActionListener(e -> operatorPress(expression,"sin"));
        bcos.addActionListener(e -> operatorPress(expression,"cos"));
        btan.addActionListener(e -> operatorPress(expression,"tan"));

        be.addActionListener(e -> operatorPress(expression, "="));

        bclear.addActionListener(e -> clearPress(expression, "clr"));
        bdel.addActionListener(e -> clearPress(expression,"del"));


        //add
        keypad.add(bclear);
        keypad.add(new JLabel());
        keypad.add(new JLabel());
        keypad.add(bdel);

        keypad.add(b7);
        keypad.add(b8);
        keypad.add(b9);
        keypad.add(ba);

        keypad.add(b4);
        keypad.add(b5);
        keypad.add(b6);
        keypad.add(bs);

        keypad.add(b1);
        keypad.add(b2);
        keypad.add(b3);
        keypad.add(bm);

        keypad.add(new JLabel());
        keypad.add(b0);
        keypad.add(bdot);
        keypad.add(bd);

        keypad.add(bsin);
        keypad.add(bcos);
        keypad.add(btan);
        keypad.add(be);

        input.add(expression);

        window.add(input, BorderLayout.NORTH);
        window.add(keypad, BorderLayout.SOUTH);

        window.pack();
        window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        window.setVisible(true);
    }


    public static void numPress(JTextField exp, String character){
        exp.setText(exp.getText() + character);
    }

    public static void operatorPress(JTextField exp, String operator){

        if (operator.equals("+")){
            temp1 = Double.parseDouble(exp.getText());
            op = operator;
            exp.setText("");
        }
        else if (operator.equals("-")){
            temp1 = Double.parseDouble(exp.getText());
            op = operator;
            exp.setText("");
        }
        else if (operator.equals("*")){
            temp1 = Double.parseDouble(exp.getText());
            op = operator;
            exp.setText("");
        }
        else if (operator.equals("/")){
            temp1 = Double.parseDouble(exp.getText());
            op = operator;
            exp.setText("");
        }

        else if (operator.equals("sin")){
            temp1 = Double.parseDouble(exp.getText());
            exp.setText("" + Math.sin(temp1));
            temp1 = 0;
        }
        else if (operator.equals("cos")){
            temp1 = Double.parseDouble(exp.getText());
            exp.setText("" + Math.cos(temp1));
            temp1 = 0;
        }
        else if (operator.equals("tan")){
            temp1 = Double.parseDouble(exp.getText());
            exp.setText("" + Math.tan(temp1));
            temp1 = 0;
        }

        else if (operator.equals("=")){
            temp2 = Double.parseDouble(exp.getText());
            switch(op){
                case "+":
                    exp.setText("" + (temp1 + temp2));
                    break;
                case "-":
                    exp.setText("" + (temp1 - temp2));
                    break;
                case "*":
                    exp.setText("" + (temp1 * temp2));
                    break;
                case "/":
                    exp.setText("" + (temp1 / temp2));
                    break;
            }

            temp1 = 0;
            temp2 = 0;
            
            op = "+";
        }
    }

    public static void clearPress(JTextField exp, String character){
        if (character.equals("clr")){
            exp.setText("");
        }
        else if (character.equals("del")){
            exp.setText(exp.getText().substring(0,exp.getText().length() - 1));
        }
    }
}
